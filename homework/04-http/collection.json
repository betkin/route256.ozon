{
	"info": {
		"_postman_id": "29e806b9-2ad8-4dbc-9336-5239eab0f64d",
		"name": "Ozon Route265",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "device-api",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "Create a device",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"platform\": \"{{platform}}\",\n  \"userId\": \"{{userID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{target}}",
									"host": [
										"{{target}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Describe a device",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"targetID = pm.collectionVariables.get(\"deviceID\");",
											"",
											"pm.test(\"ID is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.value.id).to.eql(targetID);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{target}}/{{deviceID}}",
									"host": [
										"{{target}}"
									],
									"path": [
										"{{deviceID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a device",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Update is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.success).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"platform\": \"{{paltform}}\",\n  \"userId\": \"{{userID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{target}}/{{deviceID}}",
									"host": [
										"{{target}}"
									],
									"path": [
										"{{deviceID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove a device",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Remove is successful\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.found).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{target}}/{{deviceID}}",
									"host": [
										"{{target}}"
									],
									"path": [
										"{{deviceID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List of devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{target}}?page=1&perPage=20",
									"host": [
										"{{target}}"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "20"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "target",
			"value": "http://localhost:8080/api/v1/devices",
			"type": "string"
		},
		{
			"key": "deviceID",
			"value": "11",
			"type": "string"
		},
		{
			"key": "paltform",
			"value": "FreeBSD",
			"type": "string"
		},
		{
			"key": "userID",
			"value": "666",
			"type": "string"
		}
	]
}